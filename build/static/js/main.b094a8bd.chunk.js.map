{"version":3,"sources":["Components/MenuBlock.js","Components/Menu.js","Components/Counter.js","Components/Price.js","App.js","serviceWorker.js","index.js"],"names":["MenuBlock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","blockDisplay","id","undefined","selectBlock","bind","assertThisInitialized","setState","nextProps","menuBlockNames","react_default","a","createElement","onClick","style","display","className","Component","Menu","menuOpen","selectedBlock","menuHeight","ret","menuOpenClose","toConsumableArray","i","length","ticketsCount","_this2","menuTitle","MenuBlocks","map","item","Components_MenuBlock","key","height","Counter","number","counterPlus","counterMinus","changeTicket","tickets","activeTicket","counterTitle","App","priceText","priceTitle","console","log","price","Components_Menu","Components_Counter","Price","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b094a8bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass MenuBlock extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            blockDisplay: 'none',\r\n            id: undefined\r\n        };\r\n        this.selectBlock = this.selectBlock.bind(this);\r\n    }\r\n    componentWillMount(){\r\n        this.setState({\r\n            blockDisplay: this.props.blockDisplay,\r\n            id: this.props.id\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({blockDisplay: nextProps.blockDisplay});\r\n    }\r\n    selectBlock(){\r\n        this.props.selectBlock(this.state.id);\r\n    }\r\n    render() {\r\n        const menuBlockNames = this.props.menuBlockNames;\r\n        return (\r\n            <div onClick = {this.selectBlock} style = {{display: this.state.blockDisplay}} className=\"menu__block\">\r\n                {menuBlockNames}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuBlock;","import React, { Component } from 'react';\r\nimport MenuBlock from './MenuBlock.js'\r\nimport '../App.css';\r\n\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: false,\r\n            selectedBlock: 0,\r\n            menuBlockNames: [],\r\n            blockDisplay: [],\r\n            menuHeight: 40,\r\n            ret: false\r\n        };\r\n        this.menuOpenClose = this.menuOpenClose.bind(this);\r\n        this.selectBlock = this.selectBlock.bind(this);\r\n    }\r\n    menuOpenClose() {\r\n        if (!this.state.menuOpen) {\r\n            let blockDisplay = [...this.state.blockDisplay];\r\n            for (let i = 0; i < this.props.menuBlockNames.length; i++) {\r\n                blockDisplay[i] = 'block';\r\n            }\r\n            this.setState({\r\n                menuHeight: 40+40*this.props.menuBlockNames.length,\r\n                blockDisplay: blockDisplay,\r\n                menuOpen: !this.state.menuOpen,\r\n\r\n            });\r\n        }else{\r\n            let blockDisplay = [...this.state.blockDisplay];\r\n            for (let i = 0; i < this.props.menuBlockNames.length; i++) {\r\n                blockDisplay[i] = 'none';\r\n            }\r\n            this.setState({\r\n                menuHeight: 40,\r\n                blockDisplay: blockDisplay,\r\n                menuOpen: !this.state.menuOpen\r\n            });\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        let blockDisplay = [...this.state.blockDisplay];\r\n        for(let i = 0; i<this.props.menuBlockNames.length;i++ ){\r\n            blockDisplay[i] = 'none';\r\n        }\r\n        this.setState({\r\n            ret: this.props.ret,\r\n            blockDisplay: blockDisplay,\r\n            menuBlockNames: this.props.menuBlockNames\r\n        });\r\n    }\r\n    selectBlock(id){\r\n        if(this.state.menuOpen) {\r\n            let blockDisplay = [...this.state.blockDisplay];\r\n            for (let i = 0; i < this.props.menuBlockNames.length; i++) {\r\n                blockDisplay[i] = 'none';\r\n            }\r\n            if(this.state.ret) {\r\n                this.props.ticketsCount(id);\r\n            }\r\n            this.setState({\r\n                menuHeight: 40,\r\n                selectedBlock: id,\r\n                blockDisplay: blockDisplay,\r\n                menuOpen: !this.state.menuOpen\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const menuTitle = this.props.menuTitle;\r\n        const menuBlockNames = this.props.menuBlockNames;\r\n        const MenuBlocks = menuBlockNames.map((item, i) =>\r\n        { return <MenuBlock key ={i} id={i} selectBlock = {this.selectBlock}\r\n                            blockDisplay={this.state.blockDisplay[i]}\r\n                            menuBlockNames={item}/>});\r\n        return (\r\n            <div className=\"menu\">\r\n                <h2 className=\"menu__title\">{menuTitle}</h2>\r\n                <div className=\"menu__main\" style = {{height: this.state.menuHeight}} onClick={this.menuOpenClose}>\r\n                    <div className=\"menu__selected\">\r\n                        {menuBlockNames[this.state.selectedBlock]}\r\n                    </div>\r\n                    {MenuBlocks}\r\n                    <div className=\"triangle-down\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Counter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            number: 0\r\n        };\r\n        this.counterPlus = this.counterPlus.bind(this);\r\n        this.counterMinus = this.counterMinus.bind(this);\r\n    }\r\n    counterPlus(){\r\n        this.props.changeTicket(this.state.number + 1);\r\n    }\r\n    counterMinus(){\r\n        if(this.state.number > 0) {\r\n            this.props.changeTicket(this.state.number - 1);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({number: nextProps.tickets[nextProps.activeTicket]})\r\n    }\r\n\r\n    render() {\r\n        const counterTitle = this.props.counterTitle;\r\n        return (\r\n            <div className=\"counter\">\r\n                <h2 className=\"counter__title\">{counterTitle}</h2>\r\n                <div className=\"counter__main\">\r\n                    <div onClick={this.counterMinus} className=\"counter__block\"><div className=\"triangle-right\"/></div>\r\n                    <div className=\"counter__number\">{this.state.number}</div>\r\n                    <div onClick={this.counterPlus} className=\"counter__block\"><div className=\"triangle-left\"/></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            priceText: 0\r\n        };\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({priceText: nextProps.priceText})\r\n    }\r\n    render() {\r\n        const priceTitle = this.props.priceTitle;\r\n        console.log(this.state.priceText);\r\n        return (\r\n            <div className=\"price\">\r\n                <h2 className=\"menu__title\">{priceTitle}</h2>\r\n                <div className=\"price__text\">{this.state.priceText} руб</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport Menu from './Components/Menu.js'\nimport Counter from './Components/Counter.js'\nimport Price from './Components/Price.js'\nimport './App.css';\n\n\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            activeTicket: 0,\n            tickets: [0,0],\n            price: 0\n        };\n        this.ticketsCount = this.ticketsCount.bind(this);\n        this.changeTicket = this.changeTicket.bind(this);\n    }\n    ticketsCount(id){\n        this.setState({activeTicket: id});\n    }\n    changeTicket(number){\n        let tickets = [...this.state.tickets];\n        tickets[this.state.activeTicket] = number;\n        this.setState({\n            tickets: tickets,\n            price: tickets[0]*100 + tickets[1]*200\n        });\n\n    }\n\n  render() {\n    return (\n        <div className=\"container\">\n          <h1 className=\"title\">Покупка билета</h1>\n          <div className=\"offer\">\n            <Menu menuBlockNames = {['Будни','Выходной']} ret = {false} menuTitle = {'День недели'}/>\n            <Menu ticketsCount = {this.ticketsCount} ret = {true} menuBlockNames = {['билет на 5 проходов','билет на 10 проходов']} menuTitle = {'Тариф'}/>\n            <Counter changeTicket = {this.changeTicket} tickets = {this.state.tickets} activeTicket = {this.state.activeTicket} counterTitle ={'Кол-во билетов'}/>\n            <Price priceText = {this.state.price} priceTitle = {'Цена билетов'}/>\n          </div>\n            <p className=\"hint\">Цена за билет на 5 проходов 100р</p>\n            <p className=\"hint\">Цена за билет на 10 проходов 200р</p>\n            <div className=\"buy__button\">Оплатить</div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}